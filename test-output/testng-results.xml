<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-23T11:22:29 IST" name="Default suite" finished-at="2023-08-23T11:23:11 IST" duration-ms="41906">
    <groups>
    </groups>
    <test started-at="2023-08-23T11:22:29 IST" name="Default test" finished-at="2023-08-23T11:23:11 IST" duration-ms="41906">
      <class name="tests.PatientVisitTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:tests.PatientVisitTest@4f6f416f]" started-at="2023-08-23T11:22:29 IST" name="openApplication" finished-at="2023-08-23T11:22:40 IST" duration-ms="10708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="patientVisitWithoutPrimaryComplaint()[pri:2, instance:tests.PatientVisitTest@4f6f416f]" started-at="2023-08-23T11:22:40 IST" name="patientVisitWithoutPrimaryComplaint" finished-at="2023-08-23T11:23:10 IST" duration-ms="30814" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebElement.getText()" because the return value of "genericPages.CommonMethod.getWebElement(String)" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.getText()" because the return value of "genericPages.CommonMethod.getWebElement(String)" is null
at genericPages.CommonMethod.verifyElementPresent(CommonMethod.java:265)
at pages.PatientVisitPage.verifyNotification(PatientVisitPage.java:153)
at tests.PatientVisitTest.patientVisitWithoutPrimaryComplaint(PatientVisitTest.java:124)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patientVisitWithoutPrimaryComplaint -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.PatientVisitTest@4f6f416f]" started-at="2023-08-23T11:23:10 IST" name="afterTest" finished-at="2023-08-23T11:23:11 IST" duration-ms="339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.PatientVisitTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
